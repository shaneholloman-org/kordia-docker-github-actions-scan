---
name: Build and Push Image

on:
  # we want pull requests so we can build(test) but not push to image registry
  pull_request:
    branches:
      - 'main'
    # only build when important files change
    paths-ignore:
      - 'README.md'
      - '.github/workflows/linter.yml'
      - '.github/linters/**'
  push:
    branches:
      - 'main'
    # only build when important files change
    paths-ignore:
      - 'README.md'
      - '.github/workflows/linter.yml'
      - '.github/linters/**'
  schedule:
    # re-run monthly to keep image fresh with upstream base images At 12:00 on day-of-month 15
    - cron: '0 12 15 * *'
  workflow_dispatch:
    # run whenever we want!

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2.3.5
      -
        # we need qemu and buildx so we can build multiple platforms later
        name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1.2.0
      -
        # BuildKit (used with `docker buildx`) is the best way to build images
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        # This makes image builds fast!
        name: Cache Docker layers
        uses: actions/cache@v3.0.2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3.6.0
        with:
          # list of Docker images to use as base name for tags
          images: |
            shaneholloman/kordia-docker-github-actions-scan
            ghcr.io/shaneholloman/kordia-docker-github-actions-scan
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest
      -
        # build the amd64 image
        name: Docker Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          push: false
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          load: true

      - 
        name: Run Snyk to check Docker image for vulnerabilities
        # https://github.com/snyk/actions/tree/master/docker
        uses: snyk/actions/docker@0.3.0
        # Snyk can be used to break the build when it detects vulnerabilities.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can sign-up for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: shaneholloman/kordia-docker-github-actions-scan
          args: --file=Dockerfile --severity-threshold=high
      - 
        name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

      -
        # this will build the images, once per platform,
        # then push to both Docker Hub and GHCR
        name: Docker Build and Push
        id: docker_build_and_push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache-new
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          # don't push during a pull_request, only build
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      -
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      -
        name: Show image digest
        run: echo ${{ steps.docker_build_and_push.outputs.digest }}
